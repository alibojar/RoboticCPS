
!rescue.

+!rescue <- .wait(500);
			rescuer.a1(Inj);
			!check_end(Inj).

+!check_end(Inj): Inj =="end" <- 	!check_injureds;
									.wait(1000);
									!check_end(Inj).

+!check_end(Inj): Inj \=="end" <- .wait(500);
								.print("Found ", Inj);
								+injured(Inj);
								!check_injureds(Inj);
								!!rescue.

+!check_injureds : injured(Inj) <- !check_injureds(Inj).			

+!check_injureds : not injured(Inj) <- true.	
								
+!check_injureds(Inj): free[source(Doc)] <- .print("Sending ", Inj, " to ", Doc);
												-free[source(Doc)];
												.send(Doc,achieve,go_to(Inj));
												+attending(Inj)[source(Doc)];
												-injured(Inj).
														 
+!check_injureds(Inj): not free[source(Doc)] <- 	.print("Broadcasting");
													.broadcast(tell,check(Inj)).
													


+discharge(Inj)[source(Doc)] <- 	-injured(Inj);
									-attending(Inj)[source(Doc)]; 
									-discharge(Inj)[source(Doc)].

+abandoned(Inj)[source(Doc)] <- 	-attending(Inj)[source(Doc)];
									+injured(Inj);
									-abandoned(Inj)[source(Doc)].
									
+free[source(Doc)] <- .print(Doc, " is free.").

-free[source(Doc)] <- .print(Doc, " is busy.").


//+injured(Inj): free[source(Doc)] <- .print("Asking ", Doc, " to attend ", Inj);
//										.send(Doc,tell,goTo(Inj)).

//+injured(Inj): not free[source(Doc)] <- .brodcast(tell,goTo(Inj)).

//+discharge(Inj) <- -injured(Inj).


/*
+!rescue: free[source(Doc)] <- -free[source(Doc)];
								rescuer.a1(Inj);
								+injured(Inj);
								.print("Asking ", Doc, " to attend ", Inj);
								.send(Doc,tell,goTo(Inj));
								!rescue.
								
+!rescue: not free[source(Doc)] <- .wait(1000); 
									!rescue.
							
+discharge(Inj)[source(Doc)]<- -injured(Inj).

+injured(Inj)<- .print("New injured:", Inj).

-injured(Inj)<- .print(Inj, " discharged").
*/
/*
!search.

+!search<- 	rescuer.a1(Inj);
			+injured(Id,Inj);
			!inform_doctors(Inj).

+!inform_doctors(Inj): free[source(Doc)] <- -free[source(Doc)];
												.send(Doc,tell,goTo(Inj));
*/											